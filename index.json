"use strict";

const O_o = String.raw`
         __                _
   _____/ /_  ____ _____  (_)
  / __ / __ \/ __ `/ __ \/ /
 (__  ) /_/ / /_/ / /_/ / /
/____/_.___/\__,_/ .___/_/
                      /_/
`;

const Hapi = require('@hapi/hapi');
const Boom = require('@hapi/boom');
const axios = require('axios');

const config = require('./config.json');

const server = Hapi.server({
  host: config.AUTH_PROXY_HOST,
  port: config.AUTH_PROXY_PORT
});

const requestHandlers = {
  userKey: userKey,
  userBarcode: userBarcode,
  holds: holds,
  courtesy: courtesy,
  overdue: overdue,
  checkCharge: checkCharge,
  checkHold: checkHold,
  fee: fee
});

const api = axios.create({
  baseURL: ILSWS_BASE_URI,
  timeout: config.ILWS_TIMEOUT || 20000,
  headers: {
    'sd-originating-app-id': ILSWS_ORIGINATING_APP_ID,
    'x-sirs-clientID': config.ILSWS_CLIENTID,
    'Accept': 'application/json'
  }
});

const PCODE1_CATEGORY = `category${config.PCODE1_SOURCE_CATEGORY.padStart(2, '0')}`;
const PCODE2_CATEGORY = `category${config.PCODE2_SOURCE_CATEGORY.padStart(2, '0')}`;
const PCODE3_CATEGORY = `category${config.PCODE3_SOURCE_CATEGORY.padStart(2, '0')}`;

const ILSWS_PATRON_INCLUDE_FIELDS = [
  'profile',
  'birthDate',
  'library',
  'alternateID',
  'createdDate',
  'lastActivityData',
  'claimsReturnedCount',
  'estimatedOverdueAmount',
  'lastName',
  'firstName',
  'middleName',
  'address1',
  'barcode',
  'standing',
  'customInformation',
  PCODE1_CATEGORY,
  PCODE2_CATEGORY,
  PCODE3_CATEGORY
];

